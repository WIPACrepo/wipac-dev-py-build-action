name: Build Python Package with setuptools-scm
description: >
  Validates setuptools-scm configuration and builds a package to the `dist/` directory.

runs:
  using: "composite"
  steps:
    - name: Figure Project's Min Py Version
      id: min-py
      shell: bash
      run: |
        # step: Figure Project's Min Py Version
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        sudo apt-get update
        python -m venv action_venv
        . action_venv/bin/activate
        pip3 install wipac-dev-tools
        
        MIN_PY=$(python -c "
        from wipac_dev_tools import semver_parser_tools

        top_python = semver_parser_tools.get_latest_py3_release()
        all_matches = semver_parser_tools.list_all_majmin_versions(
          major=top_python[0],
          semver_range=semver_range,
          max_minor=top_python[1],
        )
        
        first = all_matches[0]
        print(f'{first[0]}.{first[1]}')
        ")
        
        echo "MIN_PY=$MIN_PY" >> "$GITHUB_ENV"

    - name: Verify current Python version matches requires-python
      shell: bash
      run: |
        # step: Verify current Python version matches requires-python
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        expected="$MIN_PY"
        actual="$(python -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')"
        
        echo "Expected Python: $expected"
        echo "Actual Python:   $actual"
        
        if [[ "$actual" != "$expected" ]]; then
          echo "::error::Current Python ($actual) does not match minimum requires-python ($expected)"
          exit 1
        fi

    - name: Validate project's setuptools-scm usage
      shell: bash
      run: |
        # step: Validate project's setuptools-scm usage
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"

        if ! grep -q 'setuptools-scm' pyproject.toml; then
            echo "::error::setuptools-scm not found in pyproject.toml — aborting"
            exit 1
        fi
        
        if grep -A 5 '^\[project\]' pyproject.toml | grep -q '^version\s*='; then
            echo "::error::[project] version is explicitly set — must be managed by setuptools-scm"
            exit 1
        fi
        
        if ! grep -Eq '^\[tool\.setuptools_scm\]' pyproject.toml; then
            echo "::error::[tool.setuptools_scm] not found in pyproject.toml — aborting"
            exit 1
        fi

    - name: Install build tools
      shell: bash
      run: |
        # step: Install build tools
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        python -m pip install --upgrade pip
        pip install build setuptools setuptools-scm

    - name: Build
      shell: bash
      run: |
        # step: Build
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        SETUPTOOLS_SCM_DEBUG=1 \
            python -m build

name: Build Python Package with setuptools-scm
description: >
  Validates setuptools-scm configuration and builds a package into a specified output directory (default: `dist/`).

inputs:
  output-dir:
    description: "Directory where the build artifacts will be written."
    default: "dist/"
    required: false

runs:
  using: "composite"
  steps:
    - uses: WIPACrepo/wipac-dev-py-versions-action@v2.5
      id: py-versions

    - name: Verify current Python version matches requires-python
      shell: bash
      run: |
        set -euo pipefail
        echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        expected="${{ fromJson(steps.py-versions.outputs.matrix)[0] }}"
        actual="$(python -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')"
        
        echo "Expected Python: $expected"
        echo "Actual Python:   $actual"
        
        if [[ "$actual" != "$expected" ]]; then
          echo "::error::Current Python ($actual) does not match minimum requires-python ($expected)"
          exit 1
        fi

    - name: Install build tools
      shell: bash
      run: |
        set -euo pipefail
        echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        python -m pip install --upgrade pip
        pip install build setuptools setuptools-scm

    - name: Build
      shell: bash
      run: |
        set -euo pipefail
        echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"

        # Validate setuptools-scm usage
        if ! grep -q 'setuptools-scm' pyproject.toml; then
            echo "::error::setuptools-scm not found in pyproject.toml — aborting"
            exit 1
        fi
        #
        if grep -A 5 '^\[project\]' pyproject.toml | grep -q '^version\s*='; then
            echo "::error::[project] version is explicitly set — must be managed by setuptools-scm"
            exit 1
        fi
        #
        if ! grep -Eq '^\[tool\.setuptools_scm\]' pyproject.toml; then
            echo "::error::[tool.setuptools_scm] not found in pyproject.toml — aborting"
            exit 1
        fi

        # Build!
        SETUPTOOLS_SCM_DEBUG=1 \
          python -m build --outdir "${{ inputs.output-dir }}"
